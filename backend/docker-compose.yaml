services:
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    restart: always
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - mysql-exporter
      - loki
    networks:
      - monitoring

  loki:
    container_name: loki
    image: grafana/loki:latest
    restart: always
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./loki-config.yaml:/etc/loki/local-config.yaml
      - ./tmp/loki:/loki
    networks:
      - monitoring

  promtail:
    container_name: promtail
    image: grafana/promtail:latest
    restart: always
    volumes:
      - ./logs:/app/logs
      - ./promtail-config.yml:/etc/promtail/config.yml
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - monitoring

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${DB_USERNAME}
      - GF_SECURITY_ADMIN_PASSWORD=${DB_PASSWORD}
    depends_on:
      - prometheus
    networks:
      - monitoring

  mysql-exporter:
    container_name: mysql-exporter
    image: prom/mysqld-exporter:latest
    restart: always
    ports:
      - "9104:9104"
    command:
      - "--mysqld.username=${DB_USERNAME}:${DB_PASSWORD}"
      - "--mysqld.address=db:3306"
    depends_on:
      - db
    networks:
      - monitoring

  node-exporter:
    container_name: node-exporter
    image: prom/node-exporter:latest
    restart: always
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)'
    networks:
      - monitoring

  db:
    container_name: mysql
    image: mysql:8.0
    restart: always
    env_file:
      - .env
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    ports:
      - "${DB_PORT}:3306"
    command: --general-log=1 --general-log-file=/var/lib/mysql/general.log
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql_logs:/logs
    networks:
      - monitoring

  redis:
    container_name: redis
    image: redis:alpine
    restart: always
    ports: # 바인딩할 포트:내부 포트
      - "6379:6379"
    volumes: # 마운트할 볼륨 설정
      - ./redis_data:/data
    command: [
      "redis-server",
      "--notify-keyspace-events", "Ex"
    ]

networks:
  monitoring:
    driver: bridge

volumes:
  db_data:
  prometheus_data:
  grafana_data:
